version: "3"
services:
  agent:
    image: acapy-cache-redis
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    depends_on:
      - redis-cluster
    # volumes:
    #   - ./acapy-endpoint.sh:/acapy-endpoint.sh:ro,z
    #   - ./acapy_cache_redis:/home/indy/acapy_cache_redis:ro,z
    #   - ./docker/default_cluster.yml:/home/indy/default.yml:ro,z
    command: >
      start -it http 0.0.0.0 3000 
        -ot http 
        -e http://agent:3000
        --admin 0.0.0.0 3001 --admin-insecure-mode 
        --no-ledger
        --plugin acapy_cache_redis.v0_1
        --plugin-config-value redis_cache.connection="redis://default:test1234@172.28.0.103:6379"
        --log-level debug
    networks:
      - acapy_default
  redis-cluster:
    image: redis:latest
    container_name: cluster
    command: redis-cli --cluster create 172.28.0.101:6377 172.28.0.102:6378 172.28.0.103:6379 172.28.0.104:6380 172.28.0.105:6381 172.28.0.106:6382 --cluster-replicas 1 --cluster-yes
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    networks:
      acapy_default:
        ipv4_address: 172.28.0.107
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
      - redis-node-6
  redis-node-1:
    image: redis:latest
    container_name: node1
    command: [ "redis-server", "/conf/redis.conf", "--port 6377" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6377:6377
    volumes:
      - ../redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.101
  redis-node-2:
    image: redis:latest
    container_name: node2
    command: [ "redis-server", "/conf/redis.conf", "--port 6378" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6378:6378
    volumes:
      - ../redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.102
  redis-node-3:
    image: redis:latest
    container_name: node3
    command: [ "redis-server", "/conf/redis.conf", "--port 6379" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - ../redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.103
  redis-node-4:
    image: redis:latest
    container_name: node4
    command: [ "redis-server", "/conf/redis.conf", "--port 6380" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6380:6380
    volumes:
      - ../redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.104
  redis-node-5:
    image: redis:latest
    container_name: node5
    command: [ "redis-server", "/conf/redis.conf", "--port 6381" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6381:6381
    volumes:
      - ../redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.105
  redis-node-6:
    image: redis:latest
    container_name: node6
    command: [ "redis-server", "/conf/redis.conf", "--port 6382" ]
    environment:
      - REDISCLI_AUTH=${REDIS_PASSWORD}
    ports:
      - 6382:6382
    volumes:
      - ../redis_cluster.conf:/conf/redis.conf
    networks:
      acapy_default:
        ipv4_address: 172.28.0.106
  echo:
    image: dbluhm/echo-agent:6c22a88
    ports:
      - "3002:3002"
    command: --host 0.0.0.0 --port 3002 --log-level debug
    networks:
      - acapy_default
  tests:
    container_name: juggernaut
    build:
      context: .
      dockerfile: ./Dockerfile.cluster
    environment:
      - WAIT_BEFORE_HOSTS=3
      - WAIT_HOSTS=agent:3000,echo:3002,redis-node-3:6379
      - WAIT_HOSTS_TIMEOUT=60
      - WAIT_SLEEP_INTERVAL=1
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - AGENT_ENDPOINT=http://agent:3000
      - ADMIN_ENDPOINT=http://agent:3001
      - ECHO_ENDPOINT=http://echo:3002
    depends_on:
      - agent
      - echo
    networks:
      - acapy_default
networks:
  acapy_default:
    external: true
    name: ${NETWORK_NAME}
